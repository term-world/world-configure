#!/usr/bin/env ruby

require "dotenv"
require "json"

Dotenv.load

vol = ENV["WORLD_VOLUME"]
@cap = ENV["DISTRICT_CAP"]
@org = ENV["GITHUB_ORG"]
@house = ENV["HOUSE_REPO"]
@garage = ENV["GARAGE_REPO"]

@path = "/var/lib/docker/volumes/#{vol}/_data"

def count_caps(district)
  count = Dir.glob("[/a-zA-Z0-9-_]")
  return @cap.to_i - count.length()
end

def load_registry
  begin
    fh = File.read("#{@path}/.registry")
    json = JSON.parse(fh)
  rescue
    json = { }
  end
  return json
end

def write_registry(json)
  begin
    File.write("#{@path}/.registry", JSON.dump(json))
  rescue
    puts "Registry write error"
  end
end

def prepare_home(name, district)
  base_path = "#{@path}/city/#{district}/#{name}"
  Dir.chdir("#{base_path}")
  `mkdir -p #{base_path}/house`
  `chmod 755 #{base_path}/house`
  `mkdir -p #{base_path}/garage`
  `chmod 700 #{base_path}/garage`
  `git init`
  `git remote add origin https://github.com/term-world/user-home.git`
  `git pull origin main`
  `rm -rf .git`
  Dir.chdir("#{base_path}/house")
  `git init`
  `git remote add origin git@github.com:#{@org}/#{@house}`
  Dir.chdir("#{base_path}/garage")
  `git init`
  `git remote add origin git@github.com/#{@org}/#{@garage}`
  `rm -rf .git`
  `rm LICENSE`
  Dir.chdir("#{@path}")
end

names = File.open("users.list").readlines.map(&:chomp)
districts = File.open("districts.list").readlines.map(&:chomp)

# Check if district directories exist, otherwise create them
directories = Dir.entries("#{@path}")

registry = load_registry
vacancies = []

`chown root:docker #{@path}`
`mkdir -p #{@path}/city`
`chmod 755 #{@path}/city`

gid = 2000

districts.each{ |district|
  `mkdir -p #{@path}/city/#{district}`
  `chmod 755 #{@path}/city/#{district}`
  `groupadd -g #{gid} #{district}`
  if count_caps(district) > 0
    vacancies.push(district)
  end
  gid += 1
}

names.each{ |name|
  #if directories.include?(name)
    choice = vacancies.sample
    `mkdir -p #{@path}/#{name}`
    `mv #{@path}/#{name} #{@path}/city/#{choice}/#{name}`
    registry["#{name}"] = {
      "district":"#{choice}",
      "gid":`getent group #{choice} | cut -d: -f3`.strip
    }
    prepare_home(name, choice)
  #end
}

write_registry(registry)
